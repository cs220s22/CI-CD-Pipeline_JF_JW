name: Run Flask Tests
on: [push, pull_request]
 
jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies into virtual environment
        run: |
          python -m pip install --upgrade pip
          python3 -m venv .venv
          .venv/bin/pip install -r requirements.txt
      - name: Set Environment Variables
        run: | 
          touch .env
          echo "API_KEY = ab6c5f31aaa48f332b5ffc67168bf1b69b849442" > .env
      - name: Run Flask Server
        run: |
          .venv/bin/python3 simple_app.py &
          
      - name: Install Plugin
        run: pip install pytest-github-actions-annotate-failures
          
      - name: Tests
        run: |
          .venv/bin/pytest
          .venv/bin/pytest --cache-clear --cov simple_app 
          
      - name: pytester-cov
        id: pytester-cov
        uses: programmingwithalex/pytester-cov@v1.2.4
        with:
         cov-omit-list: '.venv/*'
         pytest-tests-dir: .
         cov-threshold-total: 95
         
      - name: Check Coverage Threshold
        if: ${{ steps.pytester-cov.outputs.cov-threshold-total-fail == 'true' }}
        run: |
         echo "Coverage fail ${{ steps.pytester-cov.outputs.cov-threshold-total-fail }}"
         exit 1

      - name: Commit message for Coverage Report
        id: commit-comment-for-coverage
        uses: peter-evans/commit-comment@v2
        env:
          PAT: ${{ secrets.PAT }}
        with:
            token: ${{ PAT }}
            body: ${{ steps.pytester-cov.outputs.output-table }}

      - name: Lint with pylint
        run: |
          pip install pylint
          pip install flask
          pip install python-dotenv
          pylint -d invalid-name -d consider-using-with simple_app.py
          pylint -d invalid-name -d consider-using-with -d missing-module-docstring -d missing-function-docstring test_app.py 
